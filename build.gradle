repositories {
    maven { url 'https://maven.fabric.io/public' }
}

buildscript {

    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
    	// updating class path due to http://stackoverflow.com/questions/29962735/android-studio-gradle-error
        classpath 'com.android.tools.build:gradle:1.1.2+'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'




android {
    compileSdkVersion "Google Inc.:Google APIs:22"
    buildToolsVersion "22.0.1"
    aaptOptions {
        useNewCruncher true
    }
    defaultConfig {
        minSdkVersion 14
        renderscriptTargetApi 18
        renderscriptSupportModeEnabled true
        targetSdkVersion 17
        multiDexEnabled = true
    }
    lintOptions {
        lintConfig file("lint.xml")
        abortOnError false
    }
    dexOptions {
        javaMaxHeapSize "2048M"
        incremental = true;
        preDexLibraries = false 
        jumboMode = true
    }
    dependencies {
        compile(project(':appcompatv7')) {
            exclude module: 'support-v4'
        }
        compile(project(':google-play')) {
            exclude module: 'support-v4'
        }
        compile(project(':viewpager-indicator-library')) {
            exclude module: 'support-v4'
        }
        compile(project(':cardview')) {
            exclude module: 'support-v4'
        }
        compile(project(':recyclerview')) {
            exclude module: 'support-v4'
        } 
        compile(project(':kpt-host')) {
            exclude module: 'support-v4'
        }
         compile(project(':transporter-library')) {
            exclude module: 'support-v4'
        }
         compile(project(':cropper')) {
            exclude module: 'support-v4'
        }
        compile fileTree(dir: 'libs', include: ['*.jar'], exclude: ['android-support-multidex.jar'])

        compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
            transitive = true;
        }

        compile('com.crashlytics.sdk.android:crashlytics-ndk:1.1.2@aar') {
            transitive = true;
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['okhttp-urlconnection','okhttp','mqtt', 'src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        black {
            res.srcDirs = ['res-black']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        debug {
            storeFile rootProject.file('debug.keystore')
            keyAlias 'androiddebugkey'
            keyPassword 'android'
             storePassword 'android'
         }
        release {
            storeFile rootProject.file('hike-android-release-key.keystore')
            storePassword "Tequ1laFr1day5"
            keyAlias "hhikedroid"
            keyPassword "Tequ1laFr1day5"
        }
    }
    if( project.hasProperty('isBuildSystemProjectProp') && project.property('isBuildSystemProjectProp').toBoolean() ) {
    applicationVariants.all { variant -> 
        variant.outputs.each { output -> 
            def file = output.outputFile
            output.outputFile = new File(file.parent, file.name.replace(".apk","-" + getVersionName() + "-" + getBranchAndCommitID() + "-"+ getDateTime() + ".apk"))
        }
    }
    }
    buildTypes {
        black {
            applicationIdSuffix ".black"
            debuggable true
            signingConfig signingConfigs.release
        }
        release {
        	minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFile 'proguard.cfg'
            manifestPlaceholders = [crashlyticsApiKey: "3f21e4564cb83ed2fe5c288241980e563cfe1db0"]
            signingConfig signingConfigs.release
        }
        obfuscated {
        	minifyEnabled true
            debuggable true
            proguardFile 'proguard.cfg'
            signingConfig signingConfigs.debug
        }
        debug {
            debuggable true
            manifestPlaceholders = [crashlyticsApiKey: "3f21e4564cb83ed2fe5c288241980e563cfe1db0"]
        }
    }
    productFlavors {
    arm {
        ndk {
            abiFilters "armeabi", "armeabi-v7a"
        	}
    	}
	}
}

def getBranchAndCommitID() {
    ext.revision = getGitRevParseInfo ( "--short" )
    ext.branch = getGitRevParseInfo ( "--abbrev-ref" )
    
    return ext.revision 
}

def getGitRevParseInfo (what) {
   def cmd = "git rev-parse " + what + " HEAD"
   def proc = cmd.execute ()
   proc.text.trim ()
}

def getVersionName() {
    def manifestParser = new com.android.builder.core.DefaultManifestParser()
    def versionName = manifestParser.getVersionName(android.sourceSets.main.manifest.srcFile)
    return versionName.replaceAll('\\.','_')
}

def getDateTime() {
    def date = new Date()
    def formattedDate = date.format('yyyy_MM_dd-HH_mm_ss')
    return formattedDate
}

crashlytics {
    enableNdk true
    androidNdkOut 'src/main/obj'
    androidNdkLibsOut 'src/main/libs'
}
