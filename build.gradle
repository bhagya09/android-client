repositories {
    mavenCentral()
}
buildscript {

    repositories {
        mavenCentral()
maven
{
url 'https://oss.sonatype.org/content/repositories/snapshots/'
}
    }
    dependencies {
    	// updating class path due to http://stackoverflow.com/questions/29962735/android-studio-gradle-error
        //classpath 'com.android.tools.build:gradle:1.5.0'
        classpath 'com.android.tools.build:gradle:1.1.2+'
        classpath 'com.squareup.gradle:gradle-android-test-plugin:0.9.1-SNAPSHOT'
    }
}
apply plugin: 'com.android.application'
android {
    compileSdkVersion "Google Inc.:Google APIs:22"
    buildToolsVersion "22.0.1"
    aaptOptions {
        useNewCruncher true
    }
    defaultConfig {
        minSdkVersion 14
        renderscriptTargetApi 18
        renderscriptSupportModeEnabled true
        targetSdkVersion 17
        multiDexEnabled = true
        //testInstrumentationRunner "com.android.test.runner.MultiDexTestRunner
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
packagingOptions {
	    exclude 'META-INF/LICENSE.txt'
	  }
    lintOptions {
        lintConfig file("lint.xml")
        abortOnError false
    }
    dexOptions {
        javaMaxHeapSize "2048M"
        incremental = true;
        preDexLibraries = false 
        jumboMode = true
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['okhttp-urlconnection','okhttp','mqtt', 'src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        black {
            res.srcDirs = ['res-black']
        }

        // http://www.littlerobots.nl/blog/stetho-for-android-debug-builds-only/
        customDev {
            manifest.srcFile 'customDev/AndroidManifest.xml'
            java.srcDirs = ['customDev']
        }

        arm {
            java.srcDirs = ['arm']
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        debug {
            storeFile rootProject.file('debug.keystore')
            keyAlias 'androiddebugkey'
            keyPassword 'android'
             storePassword 'android'
         }
        release {
            storeFile rootProject.file('hike-android-release-key.keystore')
            storePassword "Tequ1laFr1day5"
            keyAlias "hhikedroid"
            keyPassword "Tequ1laFr1day5"
        }
    }
    if( project.hasProperty('isBuildSystemProjectProp') && project.property('isBuildSystemProjectProp').toBoolean() ) {
    applicationVariants.all { variant -> 
        variant.outputs.each { output -> 
            def file = output.outputFile
            output.outputFile = new File(file.parent, file.name.replace(".apk","-" + getVersionName() + "-" + getBranchAndCommitID() + "-"+ getDateTime() + ".apk"))
        }
    }
    }
    buildTypes {
        black {
            applicationIdSuffix ".black"
            debuggable true
            signingConfig signingConfigs.release
        }
        release {
        	minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFile 'proguard.cfg'
            signingConfig signingConfigs.release
        }
        obfuscated {
        	minifyEnabled true
            debuggable true
            proguardFile 'proguard.cfg'
            signingConfig signingConfigs.debug
        }
        debug {
            debuggable true
        }
    }
    productFlavors {
    arm {
        ndk {
            abiFilters "armeabi", "armeabi-v7a"
        	}
    	}

        customDev {  //This flavor will contain all those dependencies which are useful for debugging purposes but are not meant to be shipped
            ndk {
                abiFilters "armeabi", "armeabi-v7a"
            }
            versionName computeCustomDevVersionName()
        }
	}
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}

dependencies {
    compile 'com.android.support:support-v4:23.1.+'
    compile(project(':appcompatv7')) {
        exclude module: 'support-v4'
    }
    compile(project(':google-play')) {
        exclude module: 'support-v4'
    }
    compile(project(':viewpager-indicator-library')) {
        exclude module: 'support-v4'
    }
    compile(project(':cardview')) {
        exclude module: 'support-v4'
    }
    compile(project(':recyclerview')) {
        exclude module: 'support-v4'
    }
    compile(project(':kpt-host')) {
        exclude module: 'support-v4'
    }
    compile(project(':transporter-library')) {
        exclude module: 'support-v4'
    }
    compile(project(':cropper')) {
        exclude module: 'support-v4'
    }
    compile('com.android.support:customtabs:23.1.0') {
        exclude module: 'support-v4'
    }
    compile fileTree(include: ['*.jar'], exclude: ['android-support-multidex.jar'], dir: 'libs')
    customDevCompile 'com.facebook.stetho:stetho:1.3.0'
    compile 'junit:junit:4.12'
}


def getBranchAndCommitID() {
    ext.revision = getGitRevParseInfo ( "--short" )
    ext.branch = getGitRevParseInfo ( "--abbrev-ref" )
    
    return ext.revision 
}

def getGitRevParseInfo (what) {
   def cmd = "git rev-parse " + what + " HEAD"
   def proc = cmd.execute ()
   proc.text.trim ()
}

def getVersionName() {
    def manifestParser = new com.android.builder.core.DefaultManifestParser()
    def versionName = manifestParser.getVersionName(android.sourceSets.main.manifest.srcFile)
    return versionName.replaceAll('\\.','_')
}

def getDateTime() {
    def date = new Date()
    def formattedDate = date.format('yyyy_MM_dd-HH_mm_ss')
    return formattedDate
}

// This function appends "Custom_Dev_Flavor" to the versionName present in AndroidManifest file
def computeCustomDevVersionName()
{
    def manifestParser = new com.android.builder.core.DefaultManifestParser()
    def versionName = manifestParser.getVersionName(android.sourceSets.main.manifest.srcFile)
    return versionName + ".Custom_Dev_Flavor"
}
dependencies {
testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    compile 'junit:junit:4.12'
    compile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.android.support:support-annotations:23.0.1'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    compile 'com.android.support.test:runner:0.5'
    compile 'com.android.support:multidex-instrumentation:1.0.1'
}

android.packagingOptions {
	    exclude 'LICENSE.txt'
exclude 'META-INF/NOTICE'
exclude 'META-INF/LICENSE'
	  }
task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
